#- name: Read current inventory file
#  slurp:
#    src: "{{ inventory_file }}"
#  register: inventory_raw

#- name: Decode inventory file to string
#  set_fact:
#    inventory_text: "{{ inventory_raw.content | b64decode }}"

#- name: Determine indentation of DNS block
#  set_fact:
#    dns_block_indent: >-
#      {{
#        (inventory_text
#         | regex_search('^([ \\t]*)' ~ dns_block_start, '\\1', multiline=True)
#        ) | length
#      }}


- name: Determine indentation of DNS block
  set_fact:
    input : "{{ lookup('template', '/tmp/httpd.conf') }}"

- name: Write indentation of DNS block to variable
  set_fact:    
    target: "{{ input | regex_replace('[\s]*dns_block_start', '\\1') }}"

- debug:
  msg: "{{target }}"

- name: Generate DNS YAML block with dynamic indentation
  set_fact:
    dns_block: |
      {{ dns_block_start }}
      {{ cf_zones | to_nice_yaml(indent=dns_block_indent, width=999) | indent(dns_block_indent) }}
      {{ dns_block_end }}

- name: Show generated DNS block
  debug:
    msg: "{{ dns_block }}"

- name: Replace DNS block in inventory file
  replace:
    path: "{{ inventory_file }}"
    regexp: "(?s){{ dns_block_start }}.*{{ dns_block_end }}"
    replace: "{{ dns_block }}"
    backup: true
    diff: true
