- name: Read current inventory file
  slurp:
    src: "{{ inventory_file }}"
  register: inventory_raw

- name: Decode inventory file to string
  set_fact:
    inventory_text: "{{ inventory_raw.content | b64decode }}"

- name: Determine indentation of DNS block
  set_fact:
    dns_indent: >-
      {{
        (inventory_text
         | regex_search('^( *)' ~ dns_block_start, '\\1')
        ) | length
      }}

- name: Generate DNS block from all_cf_entries with dynamic indentation
  set_fact:
    dns_block: |
      {{ ' ' * dns_indent }}{{ dns_block_start }}
{% for zone in all_cf_entries %}
{{ ' ' * (dns_indent + 2) }}- zone: {{ zone.zone }}
{{ ' ' * (dns_indent + 4) }}dns_entries:
{% for entry in zone.dns_entries %}
{{ ' ' * (dns_indent + 6) }}- { name: "{{ entry.name }}", type: "{{ entry.type }}", value: "{{ entry.content }}" }
{% endfor %}
{% endfor %}
{{ ' ' * dns_indent }}{{ dns_block_end }}

- name: Replace DNS block in inventory file
  replace:
    path: "{{ inventory_file }}"
    regexp: "(?s){{ dns_block_start }}.*{{ dns_block_end }}"
    replace: "{{ dns_block }}"

- name: Debug DNS block
  debug:
    msg: "{{ dns_block }}"
